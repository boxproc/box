# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

       #Set up 11 java  
      - name: setup java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
        
      # Check java version
      - name: check java
        run: java -version
      
       #Authorisation step  
      - name: Authorisation
        run: echo authorised
        
      # Clean target folder(compiled classes) with maven
      - name: Clean target folder
        run: mvn clean --file pom.xml
        
      # Build target folder(compiled classes) with maven
      - name: Build target folder
        run: mvn install --file pom.xml

      - name: Copy single file to remote
        if: steps.build.outputs.exit_code == 0
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/boxproc.war
          remote: /tmp/boxproc.war
          host: ${{ secrets.HOST }}
          privateKey: ${{ secrets.PRIVATEKEY }}
          username: ${{ secrets.AWSUSER }}
          
      - name: Restart tomcat server
        if: steps.build.outputs.exit_code == 0
        uses: fifsky/ssh-action@master
        with:
          command: sudo service boxapi-dev restart
          host: ${{ secrets.HOST }}
          user: ${{ secrets.AWSUSER }}
          key:  ${{ secrets.PRIVATEKEY }}

